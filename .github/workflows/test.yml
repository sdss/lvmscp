name: Test

on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Cache Setup
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --preview

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          poetry --version
          poetry install

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --show-source --statistics

      - name: Lint with black
        run: |
          poetry run black --check .

      - name: Lint with isort
        run: |
          poetry run isort -c . -vvv

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: ./tests/coverage.xml
